{#
#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
#}
[loggers]
keys: root, suds, wsgi{%- if eon_component == "eon-api" %}{%- if enable_eon_api_auditing | bool %}, audit{% endif %}{% endif %}

[handlers]
keys: watchedfile, logstash{%- if eon_component == "eon-api" %}{%- if enable_eon_api_auditing | bool %}, auditfile{% endif %}{% endif %}

[formatters]
keys: context, logstash


[logger_root]
qualname: root
handlers: watchedfile, logstash
level: INFO

[logger_suds]
qualname: suds
handlers: watchedfile, logstash
level: INFO

[logger_wsgi]
qualname: eventlet.wsgi.server
handlers: watchedfile, logstash
level: WARN

{% if eon_component == "eon-api" %}
{% if enable_eon_api_auditing | bool %}
[logger_audit]
qualname: oslo.messaging.notification.audit
handlers: auditfile
level: INFO
propagate: 0
{% endif %}
{% endif %}

# Writes to disk
[handler_watchedfile]
class: handlers.WatchedFileHandler
args: ('{{ eon_log_file }}',)
formatter: context

# Writes JSON to disk, beaver will ship to logstash
[handler_logstash]
class: handlers.WatchedFileHandler
args: ('{{ eon_log_file_json }}',)
formatter: logstash

{% if eon_component == "eon-api" %}
{% if enable_eon_api_auditing | bool %}
[handler_auditfile]
class: handlers.WatchedFileHandler
args: ('{{ eon_api_audit_log_location }}/eon/eon-audit.log',)
formatter: context
{% endif %}
{% endif %}

# datefmt must be set otherwise you end up with too many (msecs) fields
[formatter_context]
class: eon.openstack.common.log.ContextFormatter
args: (datefmt=datefmt)
format: %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s
datefmt: %Y-%m-%d %H:%M:%S

# the "format" attr actually sets the "type"
[formatter_logstash]
class = logstash.LogstashFormatterVersion1
format = eon
