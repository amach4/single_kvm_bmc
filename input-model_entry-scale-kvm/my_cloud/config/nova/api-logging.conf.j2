{#
#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
#}
[loggers]
keys: root{%- if nova_api_audit_enable|bool %}, audit, oldaudit{% endif %}

[handlers]
keys: watchedfile, logstash{%- if nova_api_audit_enable|bool %}, auditfile{% endif %}

[formatters]
keys: context, logstash, minimal


[logger_root]
qualname: root
handlers: watchedfile, logstash
level: NOTSET
{%- if nova_api_audit_enable|bool %}


[logger_audit]
qualname: oslo_messaging.notification.audit
handlers: auditfile
propagate: 0
level: INFO

# This is here to support the deprecated qualname oslo.messaging
# when this moves to oslo_messaging this logger can be removed
[logger_oldaudit]
qualname: oslo.messaging.notification.audit
handlers: auditfile
propagate: 0
level: INFO
{% endif %}

# Writes to disk
[handler_watchedfile]
class: handlers.WatchedFileHandler
args: ('{{ log_dir }}/nova-api.log',)
formatter: context

# Writes JSON to disk, beaver will ship to logstash
[handler_logstash]
class: handlers.WatchedFileHandler
args: ('{{ log_dir }}/nova-api-json.log',)
formatter: logstash
level: INFO
{%- if nova_api_audit_enable|bool %}

# Writes to disk
[handler_auditfile]
class: handlers.WatchedFileHandler
args: ('{{ nova_audit_log_location }}/nova-audit.log',)
formatter: minimal
level: INFO
{% endif %}

[formatter_minimal]
format: %(message)s

# datefmt must be set otherwise you end up with too many (msecs) fields
[formatter_context]
class: oslo_log.formatters.ContextFormatter
args: (datefmt=datefmt)
format: %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s
datefmt: %Y-%m-%d %H:%M:%S

# the "format" and "datefmt" actually set the "type" and "tags"
[formatter_logstash]
class: logstash.LogstashFormatterVersion1
format: nova
datefmt: nova-api

