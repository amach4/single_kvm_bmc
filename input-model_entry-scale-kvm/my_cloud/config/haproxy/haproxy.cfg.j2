{#
# (c) Copyright 2015-2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
#}
# For custom site-specific configuration, please see the end of this file.

global
{%- for hglobal in haproxy_globals %}

    {{ hglobal }}
{%- endfor %}
{% set haproxy_processes = ([ haproxy_dyn_processes|int, haproxy_max_processes ]|sort)[0] %}

{%- if ( haproxy_processes is defined and haproxy_processes > 1 and
         haproxy_is_baremetal  == 'True' ) %}

    nbproc {{ haproxy_processes }}
{%- for i in range(haproxy_processes) %}

    cpu-map {{ loop.index }} {{ loop.index }}
{%- endfor %}
{%- endif %}


defaults
{%- for hdefault in haproxy_defaults|list + haproxy_defaults_os|list %}

    {{ hdefault }}
{%- endfor %}


listen stats
    bind {{ host.bind.FND_CLU.internal.ip_address }}:{{ host.bind.FND_CLU.internal.port }}
    mode http
    stats enable
    stats uri /
    stats realm HAProxy\ Statistics
    stats auth {{ FND_CLU.vars.haproxy_stats_user }}:{{ FND_CLU.vars.haproxy_stats_password }}
    bind-process 1

{%- for service in FND_CLU.has_proxy | default({}) %}
  {% set proxy = FND_CLU.has_proxy[service] %}
  {% set process = loop.index0 % haproxy_processes + 1 %}
  {%- for network in proxy.networks %}
    {%- for port in network.ports %}
      {% set server_port = network.server_ports[loop.index0] | default(port) %}

{%- if network.terminate_tls is defined and network.terminate_tls and port == '80' %}
    {% set port = '443' %}
{%- endif %}


listen {{ network.vip }}-{{ port }}
    {%- set options = network.vip_options | default(vip_options_defaults) %}
      {%- if options > 0 %}
        {%- for option in options %}

    {{ option }}
        {%- endfor %}
      {%- endif %}

    bind-process {{ process }}

    bind {{ network.vip }}:{{ port }} {% if network.terminate_tls is defined and network.terminate_tls %} ssl crt {{ frontend_server_cert_directory }}/{{ network.cert_file }} {{ bind_defaults }} {% endif %}
        {%- for server in proxy.servers %}
            {%- set backend_check = network.vip_check | default(vip_check_defaults) %}
            {%- if network.vip_backup_mode is defined and network.vip_backup_mode and loop.index != 1 %}
                    {% set backup = "backup" %}
            {%- else %}
                    {% set backup = "" %}
            {%- endif %}
            {%- if proxy.initiate_tls | default(False) %}
                    {% set ssl_check = "ssl verify none" %}
            {%- else %}
                    {% set ssl_check = "" %}
            {%- endif %}

    server {{ server }}-{{ service }}-{{ server_port }} {{ server }}:{{ server_port }} {{ backend_check }} {{ backup }} {{ ssl_check }}
        {%- endfor %}
    {%- endfor %}
  {%- endfor %}
{%- endfor %}

#
# BEGIN CUSTOM CONFIGURATION
#
# Place any custom VIP definitions here: for manual HDP service definitions only

# VIP service names and server identifiers are for reporting only.
# listen YOUR-VIP-SERVICE-NAME-GOES-HERE
#     option httpchk GET /
#     # The external IP address and port
#     bind 1.2.3.4:6789
#     server SERVER-AND-SERVICE-IDENTIFIER-1-HERE 192.168.99.1:6789 check inter 2000 rise 2 fall 5
#     server SERVER-AND-SERVICE-IDENTIFIER-2-HERE 192.168.99.2:6789 check inter 2000 rise 2 fall 5
#     server SERVER-AND-SERVICE-IDENTIFIER-3-HERE 192.168.99.3:6789 check inter 2000 rise 2 fall 5

#
# END CUSTOM CONFIGURATION
#
